<?php	include_once './classes/DataBaseManager_class.php';	include_once './include/classes/FormManager_class.php';	include_once './classes/ProduitManager_class.php';		class Produit	{		private $_nom; 		private $_prix;		private $_categorie; 		private $_provenance;			private static $typeProduit=array("Pain, Viennoiserie","Terroire","Fruit","L&eacute;gume","Viande");						public function __construct($_nom, $_prix, $_categorie, $_provenance)		{			$this->setNom($_nom); 			$this->setPrix($_prix);			$this->setCategorie($_categorie); 			$this->setProvenance($_provenance);		}					public function afficher()		{			echo ' <div class="produit_infos">				   <strong>Nom</strong> : '.$this->_nom.'<br /> 				   <strong>Prix</strong> : '.$this->_prix.'<br /> 				   <strong>Categorie</strong> : '.$this->_categorie.'<br />				   <strong>Provenance</strong> : '.$this->_provenance.'<br />';				   $display = isset($_SESSION['id']) ? $_SESSION['id'] : false;					if($display==true)					{                        echo'<a href="panierAdd.php?action=ajout&amp;l='.$this->_nom.'&amp;q=1&amp;p='.$this->_prix.'"onclick="window.open(this.href,\'\',\'toolbar=no, location="center", directories=no, status=yes, scrollbars=no, resizable=no, copyhistory=no, width=300, height=150\');return false;">Ajouter au panier</a>';					}            echo '</div>';			echo "<br/>";			echo "<hr/>";					}				private function defaultInit()		{			$this->_nom = ""; 			$this->_prix = "";			$this->_categorie = "";			$this->_provenance = "";		}				public static function getEmptyProduit()		{			$produit = new Produit("dqdqdq", 10.0, "zqddqz", "dqdqz"); 			$produit->defaultInit();			return $produit;		}				public static function getProduitFromForm(&$messagesExceptions, $nom=NULL, $prix=NULL, $categorie=NULL, $provenance=NULL)		{						if (empty($messagesExceptions)) $messagesExceptions = array();			return self::getProduitFromForm2($messagesExceptions,  $nom, $prix, $categorie, $provenance);				}				public static function getProduitFromForm2(&$messagesExceptions,  $nom=NULL, $prix=NULL, $categorie=NULL, $provenance=NULL)		{			$produit = self::getEmptyProduit();			if (empty($messagesExceptions)) $messagesExceptions = ""; 						try 			{ 				$produit->setNom($nom); 			} 			catch (Exception $e) 			{				$messagesExceptions .= $e->getMessage().'<br />'; 			} 			try 			{ 				$produit->setPrix($prix); 			} 			catch (Exception $e) 			{				$messagesExceptions .= $e->getMessage().'<br />'; 			} 			try 			{ 				$produit->setCategorie($categorie); 			} 			catch (Exception $e) 			{				$messagesExceptions .= $e->getMessage().'<br />'; 			}			try			{				$produit->setProvenance($provenance);			}			catch (Exception $e)			{				$messagesExceptions .= $e->getMessage().'<br />'; 			}						return $produit;		}				public function generateForm($methode, $action, $messagesExceptions)		{			echo '<div align="center"><b>Merci de saisir les informations suivantes : </b></div>'; echo '<div id="form_inscription">';			if (!empty($messagesExceptions))			{				echo '<div class="messages_erreur"><br>'; 				if (is_array($messagesExceptions) )					foreach ($messagesExceptions as $message) echo $message;				else 					echo $messagesExceptions;				echo '</div>'; 			}			FormManager::beginForm($methode, $action, '');							echo '<h3>Informations du produit</h3>';								$key = "nom";							FormManager::addTextInput("Nom", $key, $key, $this->_nom, '', '');								$key = "prix";				FormManager::addTextInput("Prix", $key, $key, $this->_prix, '', '');											$key = "categorie";				FormManager::addTextInput("Categorie", $key, $key, $this->_categorie, '', '');								$key = "provenance";				FormManager::addTextInput("Provenance", $key, $key, $this->_provenance, '', '');									echo '<div align="center" style="clear:both;">';				FormManager::addInput("", "submit", "saisie_produit_submit", "saisie_produit_submit", "Envoyer", "");				echo '</div>';			FormManager::endForm();			echo '</div>'; 		}				/* ---------------------------------------------------------------------------------------------------------------*/ 		public function getNom() { return $this->_nom; }		public function getPrix() { return $this->_prix; }		public function getCategorie() { return $this->_categorie; }		public function getProvenance() { return $this->_provenance; }				/* ------------------------------------------------------------------------------------------------------------*/						public function setNom($nom)		{						if ($nom == null || !is_string($nom) || strlen($nom) < 1 || strlen($nom) > 51) 				throw new Exception('Erreur : le nom est obligatoire et doit comporter au maximum 50 caract&egrave;res.');			else				$this->_nom = $nom;		}                                		public function setPrix($prix)		{			if ($prix == null || $prix<= 0.0)				throw new Exception('Erreur : le prix est obligatoire et doit etre sup&eacute;rieur à 0.');			else				$this->_prix = $prix;		}				public function setCategorie($categorie)		{			if ($categorie == null || !is_string($categorie) || strlen($categorie) < 1)				throw new Exception('Erreur : la catégorie est obligatoire.');			else				$this->_categorie = $categorie;			}				public function setProvenance($provenance)		{			if ($provenance == null || strlen($provenance) < 1)				throw new Exception('Erreur : la provenance est obligatoire.');			else				$this->_provenance = $provenance;		}	}?>